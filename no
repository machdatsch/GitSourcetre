* [33mcommit c11ff1a04944c06fa80babd3d6845b36a2cb9af6[m
[31m|[m Author: Hansueli <alek.wyss@gmail.com>
[31m|[m Date:   Tue Dec 5 13:04:15 2017 +0100
[31m|[m 
[31m|[m     Picture added
[31m|[m 
[31m|[m [1mdiff --git a/output git.PNG b/output git.PNG[m
[31m|[m [1mnew file mode 100644[m
[31m|[m [1mindex 0000000..c518a15[m
[31m|[m Binary files /dev/null and b/output git.PNG differ
[31m|[m 
* [33mcommit 76a8d55f31e40a7556e660921d9328916eace2a5[m
[31m|[m Author: Alexander Wyss <alexander.wyss@uzh.ch>
[31m|[m Date:   Sat Dec 2 20:53:51 2017 +0100
[31m|[m 
[31m|[m     Added Hello World
[31m|[m     
[31m|[m     very simple test
[31m|[m 
[31m|[m [1mdiff --git a/test.py b/test.py[m
[31m|[m [1mnew file mode 100644[m
[31m|[m [1mindex 0000000..8e23576[m
[31m|[m [1m--- /dev/null[m
[31m|[m [1m+++ b/test.py[m
[31m|[m [36m@@ -0,0 +1 @@[m
[31m|[m [32m+[m[32mprint("Hello World")[m
[31m|[m \ No newline at end of file[m
[31m|[m 
* [33mcommit 4807efe80ccdc43460e4f874fb3da05e53175ff1[m
  Author: Alexander Wyss <alexander.wyss@uzh.ch>
  Date:   Sat Dec 2 20:14:45 2017 +0100
  
      Info I exercise06 added
  
  [1mdiff --git a/__pycache__/module.cpython-36.pyc b/__pycache__/module.cpython-36.pyc[m
  [1mnew file mode 100644[m
  [1mindex 0000000..4382a14[m
  Binary files /dev/null and b/__pycache__/module.cpython-36.pyc differ
  [1mdiff --git a/__pycache__/moduleElement.cpython-36.pyc b/__pycache__/moduleElement.cpython-36.pyc[m
  [1mnew file mode 100644[m
  [1mindex 0000000..ba53e47[m
  Binary files /dev/null and b/__pycache__/moduleElement.cpython-36.pyc differ
  [1mdiff --git a/module.py b/module.py[m
  [1mnew file mode 100644[m
  [1mindex 0000000..13dc8bd[m
  [1m--- /dev/null[m
  [1m+++ b/module.py[m
  [36m@@ -0,0 +1,150 @@[m
  [32m+[m[32mfrom moduleElement import *[m
  [32m+[m
  [32m+[m[32mclass Module(object):[m
  [32m+[m
  [32m+[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    ######## CODE MISSING HERE[m
  [32m+[m[32m    module_count = 0[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def __init__(self,ects,title,semester,grade=None):[m
  [32m+[m[32m        "constructor for class module"[m
  [32m+[m
  [32m+[m[32m        self.ects = ects[m
  [32m+[m[32m        self.grade = grade[m
  [32m+[m[32m        self.title = title[m
  [32m+[m[32m        self.semester = semester[m
  [32m+[m
  [32m+[m[32m        self.dates = [][m
  [32m+[m
  [32m+[m[32m        self.elements = [][m
  [32m+[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        Module.module_count += 1[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def get_important_dates_overview(self):[m
  [32m+[m[32m        "prints all the important dates for a module"[m
  [32m+[m
  [32m+[m[32m        print("Important dates for {0:s}:".format(self.title))[m
  [32m+[m
  [32m+[m[32m        for kind,date in self.dates:[m
  [32m+[m[32m            print("\t{0:s} on {1:s}".format(kind,date))[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def set_grade(self,grade):[m
  [32m+[m[32m        "set the grade to a given value"[m
  [32m+[m
  [32m+[m[32m        self.grade = grade[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def add_module_element(self,other_class,date):[m
  [32m+[m[32m        "add a new module element to the elements list"[m
  [32m+[m
  [32m+[m[32m        obj = other_class(self)[m
  [32m+[m[32m        obj.add_important_date(date)[m
  [32m+[m[32m        self.elements.append((obj))[m
  [32m+[m
  [32m+[m[32m    def get_title(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return self.title[m
  [32m+[m
  [32m+[m[32m    def get_grade(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return self.grade[m
  [32m+[m
  [32m+[m[32m#########################################################################[m
  [32m+[m
  [32m+[m[32mclass Course(Module):[m
  [32m+[m
  [32m+[m[32m    def __str__(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return "Course: " + self.get_title()[m
  [32m+[m
  [32m+[m[32m#########################################################################[m
  [32m+[m
  [32m+[m[32mclass Seminar(Module):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,ects,title,semester,topic, grade=None):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        self.__ects = ects[m
  [32m+[m[32m        self.__title = title[m
  [32m+[m[32m        self.__semester = semester[m
  [32m+[m[32m        self.__topic = topic[m
  [32m+[m[32m        self.__grade = grade[m
  [32m+[m
  [32m+[m[32m    def __str__(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return "Seminar in Software Engeneering under the topic: " + self.get_topic()[m
  [32m+[m
  [32m+[m[32m    def get_topic(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return self.__topic[m
  [32m+[m
  [32m+[m[32m#########################################################################[m
  [32m+[m
  [32m+[m[32mclass Thesis(Module):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,ects,title,semester,topic,research_group, grade=None):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        self.__ects = ects[m
  [32m+[m[32m        self.__title = title[m
  [32m+[m[32m        self.__semester = semester[m
  [32m+[m[32m        self.__topic = topic[m
  [32m+[m[32m        self.__research_group = research_group[m
  [32m+[m[32m        self.__grade = grade[m
  [32m+[m
  [32m+[m[32m    def __str__(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return "Bachelor Thesis on the topic: %s in the Research Group %s" % (self.__topic, self.__research_group)[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def get_topic(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return self.__topic[m
  [32m+[m
  [32m+[m[32m    def get_research_group(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        return self.__research_group[m
  [32m+[m
  [32m+[m[32m#########################################################################[m
  [32m+[m
  [32m+[m[32m### test cases ###[m
  [32m+[m
  [32m+[m[32minfo1 = Course(6,"Info 1",1)[m
  [32m+[m[32minfo1.add_module_element(Midterm,"31.10.2017")[m
  [32m+[m[32minfo1.add_module_element(FinalExam,"20.12.2017")[m
  [32m+[m[32minfo1.get_important_dates_overview()[m
  [32m+[m[32m# expected output:[m
  [32m+[m[32m# Important dates for Info 1:[m
  [32m+[m[32m#	Midterm on 31.10.2017[m
  [32m+[m[32m#	Final Exam on 20.12.2017[m
  [32m+[m[32mprint(info1)[m
  [32m+[m[32m# expected output:[m
  [32m+[m[32m# Course: Info 1[m
  [32m+[m
  [32m+[m[32mmath1 = Course(6, "Mathematik I", 1)[m
  [32m+[m[32mmath1.add_module_element(Midterm,"18.12.2017")[m
  [32m+[m[32mmath1.get_important_dates_overview()[m
  [32m+[m[32m# Important dates for Mathematik I:[m
  [32m+[m[32m#	Midterm on 18.12.2017[m
  [32m+[m
  [32m+[m
  [32m+[m[32m# print(Module.module_count)[m
  [32m+[m[32m# expected output: 2[m
  [32m+[m
  [32m+[m[32mthesis = Thesis(18,"Bachelor Thesis",6,"A promising research topic on Software Engineering","SEAL")[m
  [32m+[m[32m# print(thesis)[m
  [32m+[m[32m# expected output:[m
  [32m+[m[32m# Bachelor Thesis on the topic: A promising research topic on Software Engineering in the Research Group SEAL[m
  [32m+[m
  [32m+[m
  [32m+[m[32msem = Seminar(3,"Seminar in Software Engineering",4,"A Seminar topic")[m
  [32m+[m[32m# print(sem)[m
  [32m+[m[32m# print(thesis)[m
  [32m+[m[32m# expected output:[m
  [32m+[m[32m# Seminar in Software Engineering under the topic: A Seminar topic[m
  [32m+[m
  [32m+[m[32minfo1.set_grade(6)[m
  [1mdiff --git a/moduleElement.py b/moduleElement.py[m
  [1mnew file mode 100644[m
  [1mindex 0000000..6e4f741[m
  [1m--- /dev/null[m
  [1m+++ b/moduleElement.py[m
  [36m@@ -0,0 +1,78 @@[m
  [32m+[m
  [32m+[m[32mclass ModuleElement(object):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,module):[m
  [32m+[m[32m        "constructor for class module element"[m
  [32m+[m
  [32m+[m[32m        # store module as instance variable[m
  [32m+[m[32m        self.module = module[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def add_important_date(self,kind,date):[m
  [32m+[m[32m        "add a date to the module's date dictionary"[m
  [32m+[m
  [32m+[m[32m        self.module.dates.append((kind,date))[m
  [32m+[m
  [32m+[m[32m################################################################################[m
  [32m+[m
  [32m+[m[32mclass Lesson(ModuleElement):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,module):[m
  [32m+[m[32m        "constructor for class lesson"[m
  [32m+[m
  [32m+[m[32m        # call super class constructor[m
  [32m+[m[32m        ModuleElement.__init__(self,module)[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def add_important_date(self,date):[m
  [32m+[m[32m        "add a lesson to the date dictionary"[m
  [32m+[m
  [32m+[m[32m        ModuleElement.add_important_date(self,"Lesson",date)[m
  [32m+[m
  [32m+[m[32m################################################################################[m
  [32m+[m
  [32m+[m[32mclass Lab(ModuleElement):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,module):[m
  [32m+[m[32m        "constructor for class lab"[m
  [32m+[m
  [32m+[m[32m        # call super class constructor[m
  [32m+[m[32m        ModuleElement.__init__(self,module)[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def add_important_date(self,date):[m
  [32m+[m[32m        "add a lab session to the date dictionary"[m
  [32m+[m
  [32m+[m[32m        ModuleElement.add_important_date(self,"Lab Session",date)[m
  [32m+[m
  [32m+[m[32m################################################################################[m
  [32m+[m
  [32m+[m[32mclass Midterm(ModuleElement):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,module):[m
  [32m+[m[32m        "constructor for class midterm"[m
  [32m+[m
  [32m+[m[32m        # call super class constructor[m
  [32m+[m[32m        ModuleElement.__init__(self,module)[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def add_important_date(self,date):[m
  [32m+[m[32m        "add a midterm to the date dictionary"[m
  [32m+[m
  [32m+[m[32m        ModuleElement.add_important_date(self,"Midterm",date)[m
  [32m+[m
  [32m+[m[32m################################################################################[m
  [32m+[m
  [32m+[m[32mclass FinalExam(ModuleElement):[m
  [32m+[m
  [32m+[m[32m    def __init__(self,module):[m
  [32m+[m[32m        "constructor for class final exam"[m
  [32m+[m
  [32m+[m[32m        # call super class constructor[m
  [32m+[m[32m        ModuleElement.__init__(self,module)[m
  [32m+[m
  [32m+[m
  [32m+[m[32m    def add_important_date(self,date):[m
  [32m+[m[32m        "add a final exam to the date dictionary"[m
  [32m+[m
  [32m+[m[32m        ModuleElement.add_important_date(self,"Final Exam",date)[m
  [1mdiff --git a/student.py b/student.py[m
  [1mnew file mode 100644[m
  [1mindex 0000000..f197c24[m
  [1m--- /dev/null[m
  [1m+++ b/student.py[m
  [36m@@ -0,0 +1,42 @@[m
  [32m+[m[32mfrom module import *[m
  [32m+[m[32mfrom moduleElement import *[m
  [32m+[m
  [32m+[m[32mprint("habsch")[m
  [32m+[m[32mclass Student(object):[m
  [32m+[m
  [32m+[m[32m    def __init__(self, name):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        self.name = name[m
  [32m+[m[32m        self.modules = [][m
  [32m+[m[32m        self.grades = {}[m
  [32m+[m
  [32m+[m[32m    def add_module(self,module):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        self.modules.append(module)[m
  [32m+[m[32m        self.grades.update({module:module.get_grade()})[m
  [32m+[m
  [32m+[m[32m    def get_list_modules(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        print("Modules of Student %s" %self.name)[m
  [32m+[m[32m        for module in self.modules:[m
  [32m+[m[32m            print('\t', str(module)[8:])[m
  [32m+[m[32m    def get_grades(self):[m
  [32m+[m[32m        ######## CODE MISSING HERE[m
  [32m+[m[32m        print("Grades of Student %s" % self.name)[m
  [32m+[m[32m        for module in self.grades:[m
  [32m+[m[32m            print('\t', str(module)[8:] + ':', self.grades[module])[m
  [32m+[m
  [32m+[m
  [32m+[m[32m### test cases ###[m
  [32m+[m
  [32m+[m[32mme = Student("FirstName LastName")[m
  [32m+[m[32mme.add_module(info1)[m
  [32m+[m[32mme.get_list_modules()[m
  [32m+[m[32m# expected output:[m
  [32m+[m[32m# Modules of Student FirstName LastName:[m
  [32m+[m[32m#	Info 1[m
  [32m+[m
  [32m+[m[32mme.get_grades()[m
  [32m+[m[32m# expected output:[m
  [32m+[m[32m# Grades of Student FirstName LastName:[m
  [32m+[m[32m#	Info 1: 6[m
